server:
  port: 8083

spring:
  application:
    name: order-service

  datasource:
    driver-class-name: org.postgresql.Driver
    # ❗️ Використовуємо порт 5433 та назву 'order_service_db' (з docker-compose)
    url: ${DB_URL:jdbc:postgresql://localhost:5433/order_service_db}
    # ❗️ Використовуємо 'crafthub' та 'password' (з docker-compose)
    username: ${DB_USER:crafthub}
    password: ${DB_PASS:password}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    format_sql: true
  kafka:
    # Адреса нашого Kafka-сервера (з docker-compose АБО localhost)
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      # Налаштування серіалізації (ми будемо відправляти JSON як String)
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# Налаштування реєстрації в Eureka
eureka:
  client:
    service-url:
      # ❗️ ГНУЧКЕ НАЛАШТУВАННЯ:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

# ❗️ ГНУЧКЕ НАЛАШТУВАННЯ ДЛЯ FEIGN CLIENT:
feign:
  client:
    config:
      product-service: # Назва нашого Feign-клієнта (або 'default')
        # Це значення буде використано, коли ми НЕ в Docker (http://product-service не працює)
        # АБО якщо ми не використовуємо @LoadBalanced
        url: ${PRODUCT_SERVICE_URL:http://localhost:8082/api/v1/products}